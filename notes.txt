Docker commands:
docker rm rec-service_rec-server_1
docker image rm rec-server

docker build -t rec-server .
docker run -d -p 5000:5000 rec-server

docker-compose up
docker-compose up --build

docker build -t db-server .
docker run -d -p 6000:6000 db-server

Packages:
pandas
flask
lenskit
sqlalchemy
gunicorn
mysql-connector-python


Curl Testing API

Upload the model file:

curl -X PUT http://127.0.0.1:8000/algorithms/popular/modelfile -F file=@"popular.bpk"  -v > /dev/null

curl -d "user_id=1&items=5,102,203,304,400" -X GET http://127.0.0.1:8000/algorithms/bias/predictions -v > /dev/null

curl --header "Content-Type: application/json" \
  --request POST \
  --data '{"user_id":1,"items":5,102,203,304,400}' \
  http://127.0.0.1:8000/algorithms/bias/predictions -v > /dev/null

  curl -X GET http://127.0.0.1:8000/algorithms/popular/info -v > /dev/null

curl -d "user_id=22&items=5,102,203,304,400" http://127.0.0.1:5000/algorithms/funksvd/predictions
curl -d "user_id=22&items=5,102,203,304,400" http://127.0.0.1:5000/algorithms/itemitem/predictions

curl -d "user_id=22&items=5,102,203,304,400" -X POST http://127.0.0.1:8000/algorithms/funksvd/predictions -v > /dev/null

------------------------------------------------------------------------
Gunicorn:
gunicorn --bind 0.0.0.0:5000 wsgi:app

gunicorn -w 4 wsgi:app
gunicorn -w 8 wsgi:app

gunicorn --bind 0.0.0.0:5000 -w 4 wsgi:app

# 4 workers, debug mode and min timeout
gunicorn -b 0.0.0.0:5000 -w 4 wsgi:app --log-level=debug -t 2400

http://127.0.0.1:8000/recommendations?user_id=2038&num_recs=10

# timeout of 6 hours
gunicorn -w 4 wsgi:app --preload --log-level=debug -t 21600


# TODO reading
https://medium.com/building-the-system/gunicorn-3-means-of-concurrency-efbb547674b7


MySQL on Mac
odbc connector: https://dev.mysql.com/downloads/connector/odbc/
iodbc: http://www.iodbc.org/dataspace/doc/iodbc/wiki/iodbcWiki/Downloads#Mac%20OS%20X
pyodbc
brew install unixodbc
configure ‎⁨/⁨Users⁩/⁨carlos⁩/⁨Library⁩/⁨ODBC⁩/odbcinst.ini with:
[ODBC Drivers]
MySQL ODBC 8.0 ANSI Driver = Installed


[ODBC Connection Pooling]
PerfMon = 0
Retry Wait =

[MySQL ODBC 8.0 ANSI Driver]
Driver = /usr/local/mysql-connector-odbc-8.0.19-macos10.15-x86-64bit/lib/libmyodbc8a.so


Build documentation:
  sphinx-build doc build/doc


# remove container and image
docker rm postgres-db-container
docker image rm postgres-db

# create image and then create and run container
docker build -t postgres-db .
docker run --name postgres-db-container -p 5555:5432 -v /Users/carlos/BSU/Research/Project/web_apps/db/sync:/var/lib/postgresql/data postgres-db

# docker run -d --name postgres-db-container -p 5555:5432 -v /Users/carlos/BSU/Research/Project/web_apps/db/sync:/var/lib/postgresql/data postgres-db
# docker run --name postgres-db-container -p 5555:5432 postgres-db
# docker run -d --name postgres-db-container -p 5555:5432 postgres-db

docker run --name dbcontainer -p 5432:5432 pytest4250_postgresdb

docker stop postgres-db-container
docker container start postgres-db-container

// Run psql
docker exec -it postgres-db-container psql -U postgres -d db

// import CSV
\copy items FROM '/var/lib/postgresql/data/items.csv' DELIMITER ',' CSV HEADER;
\copy ratings FROM '/var/lib/postgresql/data/ratings.csv' DELIMITER ',' CSV;  