Docker commands:
docker rm rec-service_rec-server_1
docker image rm rec-server

docker build -t rec-server .
docker-compose up




Packages:
pandas
flask
lenskit
sqlalchemy
gunicorn
mysql-connector-python


Curl Testing API

Upload the model file:
curl -X PUT http://127.0.0.1:5000/algorithms/bias/modelfile -F file=@"model.pickle"

curl -X PUT http://127.0.0.1:5000/algorithms/bias/modelfile -F file=@"bias.bpk"

curl --header "Content-Type: application/json" \
  --request POST \
  --data '{"user_id":2038,"num_recs":10}' \
  http://127.0.0.1:5000/recommendations

curl -d "user_id=22&items=5,102,203,304,400" http://127.0.0.1:5000/algorithms/funksvd/predictions
curl -d "user_id=22&items=5,102,203,304,400" http://127.0.0.1:5000/algorithms/itemitem/predictions

------------------------------------------------------------------------
Gunicorn:
gunicorn --bind 0.0.0.0:5000 wsgi:app

# 4 workers, debug mode and min timeout
gunicorn -w 4 wsgi:app --log-level=debug -t 2400

http://127.0.0.1:8000/recommendations?user_id=2038&num_recs=10

# timeout of 6 hours
gunicorn -w 4 wsgi:app --preload --log-level=debug -t 21600


# TODO reading
https://medium.com/building-the-system/gunicorn-3-means-of-concurrency-efbb547674b7


MySQL on Mac
odbc connector: https://dev.mysql.com/downloads/connector/odbc/
iodbc: http://www.iodbc.org/dataspace/doc/iodbc/wiki/iodbcWiki/Downloads#Mac%20OS%20X
pyodbc
brew install unixodbc
configure ‎⁨/⁨Users⁩/⁨carlos⁩/⁨Library⁩/⁨ODBC⁩/odbcinst.ini with:
[ODBC Drivers]
MySQL ODBC 8.0 ANSI Driver = Installed


[ODBC Connection Pooling]
PerfMon = 0
Retry Wait =

[MySQL ODBC 8.0 ANSI Driver]
Driver = /usr/local/mysql-connector-odbc-8.0.19-macos10.15-x86-64bit/lib/libmyodbc8a.so